// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// rcpp_alk
Rcpp::IntegerVector rcpp_alk(const Rcpp::DataFrame gr, bool shortest);
RcppExport SEXP _spatialcluster_rcpp_alk(SEXP grSEXP, SEXP shortestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type gr(grSEXP);
    Rcpp::traits::input_parameter< bool >::type shortest(shortestSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_alk(gr, shortest));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_clk
Rcpp::IntegerVector rcpp_clk(const Rcpp::DataFrame gr_full, const Rcpp::DataFrame gr, bool shortest);
RcppExport SEXP _spatialcluster_rcpp_clk(SEXP gr_fullSEXP, SEXP grSEXP, SEXP shortestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type gr_full(gr_fullSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type gr(grSEXP);
    Rcpp::traits::input_parameter< bool >::type shortest(shortestSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_clk(gr_full, gr, shortest));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_cut_tree
Rcpp::IntegerVector rcpp_cut_tree(const Rcpp::DataFrame tree, const int ncl, const bool shortest);
RcppExport SEXP _spatialcluster_rcpp_cut_tree(SEXP treeSEXP, SEXP nclSEXP, SEXP shortestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type tree(treeSEXP);
    Rcpp::traits::input_parameter< const int >::type ncl(nclSEXP);
    Rcpp::traits::input_parameter< const bool >::type shortest(shortestSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_cut_tree(tree, ncl, shortest));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_full_initial
Rcpp::IntegerVector rcpp_full_initial(const Rcpp::DataFrame gr, bool shortest);
RcppExport SEXP _spatialcluster_rcpp_full_initial(SEXP grSEXP, SEXP shortestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type gr(grSEXP);
    Rcpp::traits::input_parameter< bool >::type shortest(shortestSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_full_initial(gr, shortest));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_full_merge
Rcpp::NumericMatrix rcpp_full_merge(const Rcpp::DataFrame gr, const std::string linkage, const bool shortest);
RcppExport SEXP _spatialcluster_rcpp_full_merge(SEXP grSEXP, SEXP linkageSEXP, SEXP shortestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type gr(grSEXP);
    Rcpp::traits::input_parameter< const std::string >::type linkage(linkageSEXP);
    Rcpp::traits::input_parameter< const bool >::type shortest(shortestSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_full_merge(gr, linkage, shortest));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_mst
Rcpp::DataFrame rcpp_mst(Rcpp::DataFrame input);
RcppExport SEXP _spatialcluster_rcpp_mst(SEXP inputSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< Rcpp::DataFrame >::type input(inputSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_mst(input));
    return rcpp_result_gen;
END_RCPP
}
// rcpp_slk
Rcpp::IntegerVector rcpp_slk(const Rcpp::DataFrame gr_full, const Rcpp::DataFrame gr, bool shortest);
RcppExport SEXP _spatialcluster_rcpp_slk(SEXP gr_fullSEXP, SEXP grSEXP, SEXP shortestSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type gr_full(gr_fullSEXP);
    Rcpp::traits::input_parameter< const Rcpp::DataFrame >::type gr(grSEXP);
    Rcpp::traits::input_parameter< bool >::type shortest(shortestSEXP);
    rcpp_result_gen = Rcpp::wrap(rcpp_slk(gr_full, gr, shortest));
    return rcpp_result_gen;
END_RCPP
}
